'''
Code to align the coordinates from neuropixels data to different areas in mouse brains. 

We will take a series of landmarks in probe space (microns from first channel, as generated
in main_probe_location.py) and in brainreg space (microns from the tip of a specific track, as 
generated by brainreg-segmentation). 

Using this, we will align each shank with an area in the Allen Brain Atlas, and will give the Allen Brain coordinates of
each point. 

When we have one landmark, we can only align the two tracks and assume that the warping generated by registering the brain
is not relevant. With two landmarks, we linearly approximate the warping. The ProbeAligner class has an option, 'harmonize',
which tells the ProbeAligner how to deal with a situation in which some shanks have more than one landmark and some don't. See README. 
'''

import physiology_alignment as align
import json

#### INPUTS

mouselist = ['FNT098']
use_past_params = False
n_shanks = 4

# Define the features for each shank
# SHANK 0
features_brainreg_0 = [1560]
features_npx_0 = [2150]

# SHANK 1
features_brainreg_1 = [1745]
features_npx_1 = [2150]

# SHANK 2
features_brainreg_2 = [947]
features_npx_2 = [2150]

# SHANK 3
features_brainreg_3 = [1662]
features_npx_3 = [2150]


# Organize the features into a dictionary with shank indices
feature_dict = {
    'shank_0': {
        'features_brainreg': features_brainreg_0,
        'features_npx': features_npx_0
    },
    'shank_1': {
        'features_brainreg': features_brainreg_1,
        'features_npx': features_npx_1
    },
    'shank_2': {
        'features_brainreg': features_brainreg_2,
        'features_npx': features_npx_2
    },
    'shank_3': {
        'features_brainreg': features_brainreg_3,
        'features_npx': features_npx_3
    }
}


if use_past_params:
    
    # Specify the path to your JSON file
    json_file_path = 'path'

    # Open the JSON file and load it as a dictionary
    with open(json_file_path, 'r') as json_file:
        data = json.load(json_file)
    params = data

    feature_dict = params['feature_dict']

#### SCRIPT

for  mouse in mouselist:

    aligner = align.ProbeAligner(mouse, feature_dict, n_shanks=n_shanks)

    aligner.align_shanks()

    aligner.session_table()

